<h2>Home</h2>

@{
    string findGuid = "";
    string vendor = "";
    string name = "";
    string role = "";
    SPSite oSpSite = new SPSite("http://ws205:46486/terex/");

    //Connect to the web using SPWeb object
    SPWeb oSPWeb = oSpSite.OpenWeb();

    //List Object to get the list from a sharepoint site
    SPList oSpList = oSPWeb.Lists["SupplierMappers"];

    //Item Collection Object getting all the items form the list
    SPListItemCollection oSpListCln = oSpList.Items;

    //iterate through all the items in itemcollection object
    foreach (SPListItem item in oSpListCln)
    {

        //string myguid =
        //string currentValue = item["ADuser"].ToString();
        // string role = item["Role"].ToString();

        if (item.UniqueId.ToString().Equals(findGuid))
        {
            UserInformation currentUser = new UserInformation();
            if (item["Vendor"] != null)
            {
                currentUser.Vendor = item["Vendor"].ToString();
            }
            string currentValue = item["ADuser"].ToString();
            SPFieldUser userField = (SPFieldUser)oSPWeb.Lists["SupplierMappers"].Fields.GetField("ADuser");
            SPFieldUserValue fieldValue = (SPFieldUserValue)userField.GetFieldValue(currentValue);
            SPUser user = fieldValue.User;
            currentUser.Name = user.ToString();
            currentUser.Role = item["Role"].ToString();
        }
    }
}
@(Html.DevExtreme().DataGrid()
    .ShowBorders(true)
    .DataSource(d => d.WebApi().Controller("Orders").Key("OrderID"))
    .Columns(columns => {
        columns.Add().DataField("OrderID");
        columns.Add().DataField("OrderDate").DataType(GridColumnDataType.Date);
        columns.Add().DataField("CustomerName");
        columns.Add().DataField("ShipCountry");
        columns.Add().DataField("ShipCity");
    })
    .Paging(p => p.PageSize(10))
    .FilterRow(f => f.Visible(true))
    .HeaderFilter(f => f.Visible(true))
    .GroupPanel(p => p.Visible(true))
    .Grouping(g => g.AutoExpandAll(false))
    .RemoteOperations(true)
    .Summary(s => s
        .TotalItems(totalItems => {
            totalItems.Add().Column("ShipCity").SummaryType(SummaryType.Count);
        })
        .GroupItems(groupItems => {
            groupItems.Add().SummaryType(SummaryType.Count);
        })
    )
)